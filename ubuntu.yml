---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - terminator
          - virtualbox
          - mlocate
          - mtr
          - fonts-powerline
          - openconnect

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true

      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0

      - name: Changing Default Shell to ZSH
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh

      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755

      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present

      - name: Install Power10k
        become: true
        git:
          repo: 'https://github.com/romkatv/powerlevel10k.git'
          dest: /home/{{ ansible_user_id }}/.oh-my-zsh/themes/powerlevel10k

      - name: enable Power10k theme
        shell:
          cmd: echo 'source ~/.oh-my-zsh/themes/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc

      - name: Changing Default ZSH Theme to aphrodite
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="aphrodite"'
          
    - name: Clone zsh-syntax-highlighting plugin
      become: true
      get_url:
        url: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
        dest: '/home/{{ ansible_user_id }}/.oh-my-zsh/plugins/'

    - name: Install zsh-syntax-highlighting plugin
      lineinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        line: 'source /home/"{{ ansible_user_id }}"/.zshrc/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh'          
      tags: zshrc
#################
    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3
      tags: awscli

    - block:
      - name: Install Google Key
        become: true
        apt_key:
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present

      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome

      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable
      tags:
        - never
        - chrome

    - block:
      - name: Install Azure CLI keys
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present

      - name: Install Azure CLI Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ jammy main'
          state: present
          filename: azure-cli

      - name: Install Azure CLI
        become: true
        apt:
          name: azure-cli
      tags:
        - never
        - azure

    - block:
      - name: Add Hashicorp Apt signing key
        become: true
        apt_key:
          url: https://apt.releases.hashicorp.com/gpg
          state: present

      - name: Add Hashicorp Apt Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://apt.releases.hashicorp.com jammy main'
          state: present
          filename: hashicorp

      - name: Install Vagrant, Terraform and Packer
        become: true
        apt:
          name: '{{ item }}'
        loop:
          - vagrant
          - terraform
          - packer
      tags: hashicorp

    - block:
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
          state: present

      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main'
          state: present
          filename: google-cloud-sdk

      - name: Install Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk
      tags:
        - gcp
        - never

    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present

      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/code stable main'
          state: present
          filename: vscode

      - name: Install Visual Studio Code
        become: true
        apt:
          name: code

      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}'
        loop:
          - ms-python.python
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
          - ms-vscode.vscode-node-azure-pack
      tags: vscode

    - block:
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present

      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce

      - name: Install Docker
        become: true
        apt:
          name: docker-ce

      - name: Adding existing user to group Docker
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          groups: docker
          append: yes

      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/v2.6.1/docker-compose-linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755

      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'

      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'

      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
      tags: docker

    - block:
      - name: Installing Kubectl 1.23.0
        become: true
        get_url:
          url: 'https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755

      - name: Downloading Kubectx and Kubens
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx

      - name: Creating Symlink to kubectx and kubens
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens

      - name: Creating ZSH Completion
        file:
          src: '/opt/kubectx/completion/{{ item }}'
          dest: '/home/{{ ansible_user_id }}/.oh-my-zsh/completions/{{ item }}'
          state: link
        with_items:
          - _kubectx.zsh
          - _kubens.zsh
      tags: kubectl

    - block:
      - name: Install Helm
        become: true
        apt_key:
          url: 'https://baltocdn.com/helm/signing.asc'
          state: present

      - name: Install Helm Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://baltocdn.com/helm/stable/debian/ all main'
          state: present
          filename: helm

      - name: Install Helm
        become: true
        apt:
          name: helm
      tags: helm

    - block:
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present

      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave

      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser
      tags: brave

    - block:
      - name: Install MS Teams
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present

      - name: Install MS teams repo
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/ms-teams stable main'
          state: present
          filename: teams

      - name: Install MS Teams
        become: true
        apt:
          name: teams
      tags: teams

    - block:
      - name: Install Enpass gpg key
        become: true
        apt_key:
          url: 'https://apt.enpass.io/keys/enpass-linux.key'
          state: present

      - name: Install Enpass repo
        become: true
        apt_repository:
          repo: 'deb https://apt.enpass.io/ stable main'
          state: present
          filename: enpass

      - name: Install Enpass app
        become: true
        apt:
          name: enpass
      tags: enpass

    - block:
      - name: Install Sublime gpg key
        become: true
        apt_key:
          url: 'https://download.sublimetext.com/sublimehq-pub.gpg'
          state: present

      - name: Install Sublime repo
        become: true
        apt_repository:
          repo: 'deb https://download.sublimetext.com/ apt/stable/'
          state: present
          filename: sublime-text

      - name: Install Sublime app
        become: true
        apt:
          name: sublime-text
      tags: sublime
